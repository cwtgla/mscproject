Dataset folder problem down into <..>prec.txt files which contain values to be compressed. Files <...>prec_expected.txt contain the decimal values the unsigned bytes in the defined bit structure should be. See below for reasoning on values chosen and working.

Working for:
--------------------------------------------------------------------------------------------------------------------------------------
	4 Mag, 7 Prec (12 bits). 1 Byte and 3 bits per value.
	Values in 1-4-7 dataset (sign-mag-prec). Values chosen to represent the various states that data can be in (sign bit present/not, pushing limit of what can be stored etc.)

	2^4 = 16 possible values, 15 highest magnitude value.
	2^7 = 128 possible values, .127 highest precision value. Multiply precision decimal by to get the value as an integer to decimal places. 

	15.127
	8.1
	0.9
	-3.5
	-15.127

	Value breakdown
	15.127
		sign: 0
		15: 1111
		127: 111 1111
		combined: 0111 1111 1111

	8.1
		sign: 0
		8: 1000
		100: 1100100
		combined: 0100 0110 0100

	0.009
		sign: 0
		0: 0000
		9: 0001001
		combined: 0000 0000 1001

	-3.005
		sign: 1
		3: 0011
		5: 0000101
		combined: 1001 1000 0101

	-15.127
		sign: 1
		15: 1111
		127: 111 1111
		combined: 1111 1111 1111

	All values combined
	12*5 = 60 bits, 7 bytes and 4 bits used
	0111 1111 1111 0100 0110 0100 0000 0000 1001 1001 1000 0101 1111 1111 1111
		127		244			100		0			153		133			255		240
--------------------------------------------------------------------------------------------------------------------------------------
	5 Mag, 10 Prec (16 bits). 2 Bytes per value.
	Values in 1-5-10 dataset (sign-mag-prec). Values chosen to represent the various states that data can be in (sign bit present/not, pushing limit of what can be stored etc.)

	2^5 = 32 possible values, 31 highest magnitude value.
	2^10 = 1024 possible values, .1023 highest precision value. Multiply precision decimal by to get the value as an integer to decimal places. 

	31.1023
	5.0449
	0.0139
	-19.1001
	-31.1023

	31.1023
		sign: 0
		31: 11111
		1023: 1111111111
		combined: 0111 1111 1111 1111

	5.449
		sign: 0
		5: 00101
		449: 0111000001
		combined: 0001 0101 1100 0001

	0.0138
		sign: 0
		0: 00000
		138: 0010001010
		combined: 0000 0000 1000 1010

	-19.1001
		sign: 1
		19: 10011
		1001: 1111101001
		combined: 1100 1111 1110 1001

	-31.1023
		sign: 1
		31: 11111
		1023: 1111111111
		combined: 1111 1111 1111 1111


	All values combined
	16*5 = 80 bits, 10 bytes used
	0111 1111 1111 1111 0001 0101 1100 0001 0000 0000 1000 1010 1100 1111 1110 1001 1111 1111 1111 1111
		127		255			21		193			0		138			207		233			255		255
--------------------------------------------------------------------------------------------------------------------------------------
	7 Mag, 12 Prec (20 bits). 2 Bytes and 3 bits per value.
	Values in 1-7-12 dataset (sign-mag-prec). Values chosen to represent the various states that data can be in (sign bit present/not, pushing limit of what can be stored etc.)

	2^7 = 128 possible values, 127 highest magnitude value.
	2^12 = 4096 possible values, .4095 highest precision value. Multiply precision decimal by to get the value as an integer to decimal places. 

	127.4095
	69.3812
	0.1121
	-88.2294
	-127.0991

	127.4095
	sign: 0
	127: 1111111
	4095: 111111111111
	combined: 0111 1111 1111 1111 1111

	69.3812
	sign: 0
	69: 1000101
	3812: 111011100100
	combined: 0100 0101 1110 1110 0100

	0.1121
	sign: 0
	0: 0000000
	1121: 010001100001
	combined: 0000 0000 0100 0110 0001

	-88.2294
	sign: 1
	88: 1011000
	2294: 100011110110
	combined: 1101 1000 1000 1111 0110

	-127.0991
	sign: 1
	127: 1111111
	991: 001111011111
	combined: 1111 1111 0011 1101 1111

	All values combined
	20*5 = 100 bits, 12 bytes and 4 bits used
	0111 1111 1111 1111 1111 0100 0101 1110 1110 0100 0000 0000 0100 0110 0001 1101 1000 1000 1111 0110 1111 1111 0011 1101 1111 (0000)
		127		255			244		94			228		0			70		29			136		246			255		61			240
--------------------------------------------------------------------------------------------------------------------------------------
	11 Mag, 10 Prec (22 bits). 2 Byte and 5 bits per value.
	Values in 1-11-10 dataset (sign-mag-prec). Values chosen to represent the various states that data can be in (sign bit present/not, pushing limit of what can be stored etc.)

	2^11 = 2048 possible values, 2047 highest magnitude value.
	2^10 = 1024 possible values, .1023 highest precision value. Multiply precision decimal by to get the value as an integer to decimal places. 

	2047.1023
	113.0913
	0.1011
	-993.0011
	-2047.1021

	2047.1023
	sign: 0
	2047: 11111111111
	1023: 1111111111
	combined:		 0111111111111111111111

	113.0913:
	sign: 0
	113: 00001110001‬
	913: ‭1110010001‬
	combined:		 00001110001‬‭1110010001‬

	0.1011:
	sign: 0
	0: 0000000000
	1011: 0‭1111110011‬
	combined:		 00000000000‭1111110011‬

	-993.0011
	sign: 1
	993: ‭01111100001‬
	11: ‭0000001011‬
	combined: 1‭01111100001‬‭0000001011‬

	-2047.1021
	sign: 1
	2047: 11111111111
	1021: ‭1111111101‬
	combined: 111111111111‭1111111101‬




01111111 11111111 11111100 00111000 1‬‭1110010 00100000 000000‭11 11110011‬ 1‭0111110 0001‬‭0000 001011‬11 11111111 11‭111111 1101‬[0000]
127			255		252			56		242		32		3			243  190














	2047.1023
	sign: 0
	2047: 11111111111
	1023: 1111111111
	combined: 0111 1111 1111 1111 1111 11

	113.0913
	sign: 0
	113: 00001110001
	913: 1110010001
	combined: 0000 0111 0001 1110 0100 01

	0.1011
	sign: 0
	0: 00000000000
	1011: 1111110011
	combined: 0000 0000 0000 1111 1100 11

	-993.0011
	sign: 1
	993: 01110100101
	11: 0000001011
	combined: 1011 1010 0101 0000 0010 11

	-2047.1021
	sign: 1
	2047: 11111111111
	1021: 1111111101
	combined: 1111 1111 1111 1111 1111 01

											x		x							x		x		x
	01111111 11111111 11111100 00011100 01111001 00010000 00000000 11111100 11101110 10010100 00001011 11111111 11111111 11110100
		127		255		252		28			121		16		0			252		238		148		11		255			255		244




	All values combined
	22*5 = 110 bits, 13 bytes and 6 bits used
	0111 1111 1111 1111 1111 1100 0001 1100 0111 1001 0001 0000 0000 0000 1111 1100 1110 1110 1001 0100 0000 1011 1111 1111 1111 1111 1111 01
		127		255			252		28			121		  16		0		252			238		 148        11		255			255		244

	0111 1111 1111 1111 1111 1100 0001 1100 0111 1001 0001 0000 0000 0000 1111 1100 1110 1111 1000 0100 0000 1011 1111 1111 1111 1111 1111 01(00)
		127		255			252		28		   121(x)		16(x)			0		252			239		132			(x)11		255			255		244


	0111 1111 = 127
	1111 1111 = 255
	1111 1100 = 252
	0001 1100 = 28
	0111 1001 = 121 (x)
	0001 0000 = 16 (x)
	0000 0000 = 0
	1111 1100 = 252
	1110 1111 = 239
	1000 0100 = 132
	0000 1011 = 11 (x)
	1111 1111 = 255
	1111 1111 = 255
	1111 01(00) = 244